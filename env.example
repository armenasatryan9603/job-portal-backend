# Backend Environment Variables
# Copy this file to .env and fill in your actual values

# Database
# DATABASE_URL=postgresql://username:password@localhost:5432/marketplace_db

# JWT Configuration
JWT_SECRET=asdf

# Server Configuration
PORT=8080
NODE_ENV=development

# CORS Configuration
CORS_ORIGIN=http://localhost:3000,http://localhost:3001
FRONTEND_URL=http://localhost:3000

# Google OAuth Configuration
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_CALLBACK_URL=http://localhost:8080/auth/google/callback
# Google Cloud Storage Configuration
GOOGLE_CLOUD_PROJECT_ID=your-google-cloud-project-id
GOOGLE_CLOUD_BUCKET_NAME=job-portal-media-splendid-petal-471416-f6
GOOGLE_CLOUD_KEY_FILE=service-account-key.json
# Google Translations
# GOOGLE_SHEETS_API_KEY=AIzaSyAsvtqOaGbV6E1z-g-5fxc1cnJSW_gWyug 

# ============================================
# SMS SERVICE CONFIGURATION (AWS SNS)
# ============================================
# Get credentials from: https://aws.amazon.com/console/
# 1. Create AWS account (free tier available)
# 2. Go to IAM > Users > Create User
# 3. Attach policy: AmazonSNSFullAccess
# 4. Create Access Key for the user
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key

# Note: If not configured, OTP will be logged to console only
# AWS Free Tier: First 100 SMS/month FREE

# Payment Gateway Configuration (AmeriaBank)
AMERIABANK_CLIENT_ID=your-ameriabank-client-id
AMERIABANK_USERNAME=your-ameriabank-username
AMERIABANK_PASSWORD=your-ameriabank-password
AMERIABANK_VPOS_URL=https://services.ameriabank.am/VPOS/api/VPOS/InitPayment
AMERIABANK_VPOS_STATUS_URL=https://services.ameriabank.am/VPOS/api/VPOS/GetPaymentDetails
# FRONTEND_URL=http://localhost:3000


# Database - Google Cloud SQL Connection
# Cloud SQL instance: splendid-petal-471416-f6:me-west1:job-portal
# Public IP: 34.165.227.126

# ===== FOR VERCEL PRODUCTION (try these in order) =====

# Option 1: Without SSL (for testing - less secure)
DATABASE_URL="postgresql://postgres:Qw123456789==@34.165.227.126:5432/job-portal?schema=public"

# Option 2: With SSL (recommended for production)
# DATABASE_URL="postgresql://postgres:Qw123456789==@34.165.227.126:5432/job-portal?sslmode=require&schema=public"

# Option 3: With SSL but allow non-SSL fallback
# DATABASE_URL="postgresql://postgres:Qw123456789==@34.165.227.126:5432/job-portal?sslmode=prefer&schema=public"

# ===== FOR LOCAL DEVELOPMENT =====
# Option 1: Using Cloud SQL Proxy (recommended - more secure)
# Step 1: Start Cloud SQL Proxy in terminal: cloud-sql-proxy splendid-petal-471416-f6:me-west1:job-portal
# Step 2: Use: DATABASE_URL="postgresql://postgres:Qw123456789==@localhost:5432/job-portal?schema=public"

# Option 2: Direct public IP connection (requires IP allowlisting in Cloud SQL)
# DATABASE_URL="postgresql://postgres:Qw123456789==@34.165.227.126:5432/job-portal?sslmode=require&schema=public"